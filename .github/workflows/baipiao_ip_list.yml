name: 更新白嫖IP库
on:
  workflow_dispatch:
  schedule:
    - cron: '30 21 * * *'  # 每天的8点、16点执行（UTC时间）

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # 全局定义变量，所有步骤共享
      PROXYIP_URL: ${{ vars.PROXYIP_URL }}
      
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4
        with:
          # 动态获取当前分支
          ref: ${{ github.ref }}
          
      - name: Check PROXYIP_URL variable
        run: |
          if [ -z "$PROXYIP_URL" ]; then
            echo "❌ 错误: 未设置 PROXYIP_URL 变量"
            echo "请在仓库设置中添加 PROXYIP_URL 变量："
            echo "1. 进入仓库 Settings > Secrets and variables > Actions"
            echo "2. 在 Variables 标签页中添加新变量"
            echo "3. Name: PROXYIP_URL"
            echo "4. Value: 配置文件的URL地址"
            exit 1
          fi
          echo "✅ PROXYIP_URL 变量已设置: $PROXYIP_URL"
          
      - name: Check URL status
        id: check_url
        run: |
          # 增强错误处理，捕获curl失败
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$PROXYIP_URL" 2>/dev/null || echo "CURL_FAIL")
          
          if [[ "$STATUS_CODE" =~ ^[0-9]+$ ]]; then
            echo "Status code: $STATUS_CODE"
            if [ "$STATUS_CODE" == "200" ]; then
              echo "✅ URL 响应正常，状态码为 200"
              echo "url_status_ok=true" >> $GITHUB_OUTPUT
            else
              echo "⚠️ URL 响应异常，状态码为 $STATUS_CODE"
              echo "url_status_ok=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "❌ CURL 错误: 无法访问 URL (错误类型: $STATUS_CODE)"
            echo "url_status_ok=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Download
        if: steps.check_url.outputs.url_status_ok == 'true'
        run: |
          # 增加重试机制
          for i in {1..3}; do
            if curl -L -f -o baipiao.txt "$PROXYIP_URL"; then
              echo "✅ 文件下载成功"
              break
            else
              echo "⚠️ 下载失败，尝试 $i/3"
              sleep 2
            fi
          done
          
          # 最终检查文件是否有效
          if [ ! -f baipiao.txt ] || [ ! -s baipiao.txt ]; then
            echo "❌ 错误: baipiao.txt 文件无效"
            exit 1
          fi
          
      - name: 提交更新的IP库文件
        if: steps.check_url.outputs.url_status_ok == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 检查文件变化
          if git diff --exit-code --quiet baipiao.txt; then
            echo "ℹ️ baipiao.txt 文件没有变化，跳过提交"
          else
            echo "✅ 检测到 baipiao.txt 文件有变化，开始提交"
            git add baipiao.txt
            git commit -m "更新IP库文件 $(date +'%Y-%m-%d %H:%M:%S')"
            
            # 动态获取当前分支
            CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            
            # 推送时使用 -u 选项设置上游分支
            git push -u origin HEAD:$CURRENT_BRANCH
            echo "🚀 提交完成，已推送到 $CURRENT_BRANCH 分支"
          fi
